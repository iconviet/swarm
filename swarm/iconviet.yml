version: "3.7"

networks:
  iconviet:
    external: true

services:
  
  #****
  # SEQ
  #****

  seq:
    networks:
      - iconviet
    ports:
      - 5341:5341
    image: iconviet/seq
    environment:
      ACCEPT_EULA: "Y"
      TZ: "Asia/Ho_Chi_Minh"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 1024M
      placement:
        constraints:
          - node.role == manager

  #******
  # MSSQL
  #******

  mssql:
    ports:
      - 1433
    networks:
      - iconviet
    image: iconviet/mssql
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    volumes:
      - ~/:/var/opt/mssql/data
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 4096M
      placement:
        constraints:
          - node.role == manager

  #******
  # REDIS
  #******

  redis:
    networks:
      - iconviet
    ports:
      - mode: host
        target: 6379
        protocol: tcp
        published: 6379
    image: iconviet/redis
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    sysctls:
      net.core.somaxconn: 65535
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 4096M
      placement:
        constraints:
          - node.role == manager

  #********
  # RAVENDB
  #********
  
  ravendb:
    ports:
      - 8080
      - 38888
    networks:
      - iconviet
    image: iconviet/ravendb
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1024M
      placement:
        constraints:
          - node.role == manager

  #********
  # ELASTIC
  #********

  elastic:
    ports:
      - 5601
      - 9200
      - 9300
    networks:
      - iconviet
    image: iconviet/elastic
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      cluster.name: "iconviet"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 4096M
      placement:
        constraints:
          - node.role == manager

  #*********
  # RABBITMQ
  #*********
  
  rabbitmq:
    ports:
      - 4369
      - 5671
      - 5672
      - 15671
      - 15672
      - 25672
    networks:
      - iconviet
    image: iconviet/rabbitmq
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 4096M
      placement:
        constraints:
          - node.role == manager

  #********
  # CITIZEN
  #********

  citizen:
    volumes:
      - ~/:/cert
      - ~/:/data
    networks:
      - iconviet
    healthcheck:
      disable: true
    ports:
      - mode: host
        target: 7100
        protocol: tcp
        published: 7100
      - mode: host
        target: 9000
        protocol: tcp
        published: 9000
    image: iconloop/prep-node
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 2048M
      placement:
        preferences:
          - spread: node.labels.zone
    environment:
      CERT_PATH: "/cert"
      FASTEST_START: "yes"
      DEFAULT_PATH: "/data"
      TZ: "Asia/Ho_Chi_Minh"
      NETWORK_ENV: "mainnet"
      ICON_LOG_LEVEL: "INFO"
      LOOPCHAIN_LOG_LEVEL: "INFO"
      PRIVATE_PASSWORD: "Ico123!@#"
      PRIVATE_KEY_FILENAME: "citizen.keystore"

  #**********
  # PORTAINER
  #**********

  portainer:
    ports:
      - 9000
    networks:
      - iconviet
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    image: iconviet/portainer
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 1024M
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/:/data
      - /var/run/docker.sock:/var/run/docker.sock

  #************
  # DOCKUPDATER
  #************

  dockupdater:
    networks:
      - iconviet
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    image: iconviet/dockupdater
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 1024M
      placement:
        constraints:
          - node.role == manager
    environment:
      LATEST: "true"
      INTERVAL: "60"
      DISABLE_CONTAINERS_CHECK: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/root/.docker/config.json

  #**************
  # REDIS-REPLICA
  #**************

  redis_replica:
    networks:
      - iconviet
    ports:
      - mode: host
        target: 6379
        protocol: tcp
        published: 6379
    image: iconviet/redis
    environment:
      TZ: "Asia/Ho_Chi_Minh"
    sysctls:
      net.core.somaxconn: 65535
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.50'
          memory: 2048M
      placement:
        constraints:
          - node.role != manager
        preferences:
          - spread: node.labels.zone
    command: ["redis-server", "/var/lib/redis/redis.conf", "--replicaof redis 6379"]