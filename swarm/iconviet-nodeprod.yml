version: "3.7"

networks:
  iconviet-nodeprod:
    external: true

services:
  # NGINX
  nginx:
    ports:
      - "80:80"
      - "81:81"
    networks:
      - iconviet-nodeprod
    image: iconviet/nginx
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/volume/nginx:/etc/nginx

  # RAVENDB
  ravendb:
    networks:
      - iconviet-nodeprod
    image: iconviet/ravendb
    ports:
      - "8080"
      - "38888"
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager

  # RABBITMQ
  rabbitmq:
    ports:
      - "5672"
      - "15672"
    networks:
      - iconviet-nodeprod
    image: iconviet/rabbitmq
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager

  # REDIS
  redis:
    ports:
      - "6379"
    networks:
      - iconviet-nodeprod
    image: iconviet/redis
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/volume/redis:/var/lib/redis

  # ELASTIC
  elastic:
    ports:
      - "5601"
      - "9200"
      - "9300"
    networks:
      - iconviet-nodeprod
    image: iconviet/elastic
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
    environment:
      - ENVIRONMENT=production
      - "cluster.name=production"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "bootstrap.memory_lock=true"
      - "enforce.bootstrap.checks=false"

  # MSSQL
  mssql:
    ports:
      - "1433"
    networks:
      - iconviet-nodeprod
    image: iconviet/mssql
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/volume/mssql:/var/opt/mssql/data

  # PORTAINER
  portainer:
    ports:
      - "9000"
    networks:
      - iconviet-nodeprod
    image: iconviet/portainer
    environment:
      - ENVIRONMENT=production
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/volume/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock

  # DOCKUPDATER
  dockupdater:
    networks:
      - iconviet-nodeprod
    image: iconviet/dockupdater
    deploy:
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.disable: "true"
    environment:
      - LABEL=true
      - LATEST=true
      - INTERVAL=30
      - CLEANUP=true
      - ENVIRONMENT=production
      - DISABLE_CONTAINERS_CHECK=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ~/.docker/config.json:/root/.docker/config.json

  # SERVICE_API
  service_api:
    ports:
      - "80"
    environment:
      - ENVIRONMENT=production
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"
    networks:
      iconviet-nodeprod:
        aliases:
          - nodeprod_iconlook_service_api
    image: iconviet.azurecr.io/nodeprod_iconlook_service_api


  #SERVICE_WEB
  service_web:
    ports:
      - "80"
    environment:
      - ENVIRONMENT=production
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"
    networks:
      iconviet-nodeprod:
        aliases:
          - nodeprod_iconlook_service_web
    image: iconviet.azurecr.io/nodeprod_iconlook_service_web

  #SERVICE_PWFRONT
  service_pwfront:
    ports:
        - 8080:8080
    environment:
      - ENVIRONMENT=production
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        delay: 1m
        window: 1m
        condition: any
      update_config:
        delay: 10s
        monitor: 60s
        parallelism: 1
        max_failure_ratio: 0.3
        failure_action: continue
      placement:
        constraints:
          - node.role == manager
      labels:
        dockupdater.enable: "true"
    image: duyyudus/icon-prep-watcher:dev
    networks:
        iconviet-nodeprod:
            aliases:
                - nodeprod_service_pwfront
    
  #SERVICE_PWBACK
  service_pwback:
      ports:
          - 5000:5000
      environment:
          - FLASK_APP=/app/main.py
          - ENVIRONMENT=production
      deploy:
        replicas: 1
        mode: replicated
        restart_policy:
          delay: 1m
          window: 1m
          condition: any
        update_config:
          delay: 10s
          monitor: 60s
          parallelism: 1
          max_failure_ratio: 0.3
          failure_action: continue
        placement:
          constraints:
            - node.role == manager
        labels:
          dockupdater.enable: "true"
      networks:
        iconviet-nodeprod:
            aliases:
                - nodeprod_service_pwback
      image: duyyudus/icon-prep-watcher-backend:latest
      command: /app/main.py --mongo-url mongodb://admin:iconviet@testapp.iconviet.io:27017
